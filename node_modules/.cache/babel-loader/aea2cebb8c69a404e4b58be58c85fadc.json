{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Product.js\";\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = sessionStorage.getItem('user');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = product_id => {\n      const user = JSON.parse(sessionStorage.getItem('user_details'));\n      console.log(user);\n      fetch(`http://localhost:8000/cart/add`, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n        },\n        body: {\n          \"user_id\": 0,\n          \"product_id\": product_id,\n          \"quantity\": 1\n        }\n      }).then(async response => {\n        const data = await response.json();\n\n        if (!response.ok) {\n          const error = data && data.message || response.statusText;\n          return Promise.reject(error);\n        }\n\n        console.log(data);\n      }).catch(error => {\n        this.setState({\n          errorMessage: error.toString()\n        });\n        console.error('There was an error!', error);\n      });\n    };\n\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const category_id = this.props.match.params.category_id;\n    fetch(`http://localhost:8000/products?category_id=${category_id}`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      }\n    }).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        products: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.products.map(products => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"categories_align card-hover\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: products.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: products.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          className: \"img-fluid\",\n          variant: \"top\",\n          src: `http://localhost:8000${products.image.substring(1)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Price : \", products.price, \" INR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.addToCart(products.id);\n          },\n          variant: \"primary\",\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, products.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Product.js"],"names":["Component","withRouter","Card","Button","token","sessionStorage","getItem","Product","constructor","props","addToCart","product_id","user","JSON","parse","console","log","fetch","method","headers","Authorization","replace","body","then","response","data","json","ok","error","message","statusText","Promise","reject","catch","setState","errorMessage","toString","state","products","componentDidMount","category_id","match","params","render","map","width","name","description","image","substring","price","id"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nconst token = sessionStorage.getItem('user')\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const category_id = this.props.match.params.category_id;\r\n\r\n        fetch(`http://localhost:8000/products?category_id=${category_id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n        })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({ products: data })\r\n        })\r\n        .catch(error => {\r\n            this.setState({ errorMessage: error.toString() });\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    \r\n    addToCart = (product_id) => {\r\n        const user = JSON.parse(sessionStorage.getItem('user_details'))\r\n        console.log(user)\r\n        fetch(`http://localhost:8000/cart/add`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n            body:{\r\n                \"user_id\": 0,\r\n                \"product_id\": product_id,\r\n                \"quantity\": 1\r\n            }\r\n        })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            console.log(data)\r\n        })\r\n        .catch(error => {\r\n            this.setState({ errorMessage: error.toString() });\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.products.map(products =>\r\n                    <Card key={products.id} className=\"categories_align card-hover\" style={{ width: '18rem' }}>\r\n                        <Card.Title>{products.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {products.description}\r\n                        </Card.Text>\r\n                        <Card.Img className=\"img-fluid\" variant=\"top\" src={`http://localhost:8000${products.image.substring(1)}`} />\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Price : {products.price} INR\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Button onClick={()=>{this.addToCart(products.id)}} variant=\"primary\">Add to cart</Button>\r\n                    </Card>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Product);"]},"metadata":{},"sourceType":"module"}