{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = sessionStorage.getItem('user');\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/categories', {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      }\n    }).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        categories: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    const {\n      categories\n    } = this.state;\n    console.log(categories);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180?text=Image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: \"Cras justo odio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: \"Dapibus ac facilisis in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: \"Vestibulum at eros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Link, {\n          href: \"#\",\n          children: \"Card Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n          href: \"#\",\n          children: \"Another Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Home.js"],"names":["React","Component","Card","ListGroup","ListGroupItem","token","sessionStorage","getItem","Home","constructor","props","state","categories","componentDidMount","fetch","method","headers","Authorization","replace","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","catch","errorMessage","toString","console","render","log","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\nconst token = sessionStorage.getItem('user')\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            categories: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://localhost:8000/categories',{\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \"+ token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n        }\r\n            )\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    const error = (data && data.message) || response.statusText;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({ categories: data })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error.toString() });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n    render() {\r\n        const { categories } = this.state\r\n        console.log(categories)\r\n        return (\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" />\r\n                <Card.Body>\r\n                    <Card.Title>Card Title</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem>Cras justo odio</ListGroupItem>\r\n                    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n                    <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                </ListGroup>\r\n                <Card.Body>\r\n                    <Card.Link href=\"#\">Card Link</Card.Link>\r\n                    <Card.Link href=\"#\">Another Link</Card.Link>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}