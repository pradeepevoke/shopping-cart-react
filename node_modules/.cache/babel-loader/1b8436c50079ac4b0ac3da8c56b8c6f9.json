{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Cart.js\";\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = sessionStorage.getItem('user');\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:8000/cart?user_id=32`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      }\n    }).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        cart: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.cart.map(cart => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"categories_align card-hover\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: cart.products.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: cart.products.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          className: \"img-fluid\",\n          variant: \"top\",\n          src: `http://localhost:8000${cart.products.image.substring(1)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Price : \", cart.products.price, \" INR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.addToCart(cart.products.id);\n          },\n          variant: \"primary\",\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, cart.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Cart.js"],"names":["Component","withRouter","Card","Button","token","sessionStorage","getItem","Cart","constructor","props","state","cart","componentDidMount","fetch","method","headers","Authorization","replace","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","catch","errorMessage","toString","console","render","log","map","width","products","name","description","image","substring","price","addToCart","id"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nconst token = sessionStorage.getItem('user')\r\n\r\nclass Cart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            cart: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        \r\n        fetch(`http://localhost:8000/cart?user_id=32`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n        })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({ cart: data })\r\n        })\r\n        .catch(error => {\r\n            this.setState({ errorMessage: error.toString() });\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.cart.map(cart =>\r\n                    <Card key={cart.id} className=\"categories_align card-hover\" style={{ width: '18rem' }}>\r\n                        <Card.Title>{cart.products.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {cart.products.description}\r\n                        </Card.Text>\r\n                        <Card.Img className=\"img-fluid\" variant=\"top\" src={`http://localhost:8000${cart.products.image.substring(1)}`} />\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Price : {cart.products.price} INR\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Button onClick={()=>{this.addToCart(cart.products.id)}} variant=\"primary\">Add to cart</Button>\r\n                    </Card>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Cart);"]},"metadata":{},"sourceType":"module"}