{"ast":null,"code":"export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport function receiveLogin() {\n  return {\n    type: LOGIN_SUCCESS\n  };\n}\nexport async function loginUser(credentials) {\n  const qs = require('qs');\n\n  return fetch('http://localhost:8000/login', {\n    method: 'POST',\n    headers: {\n      'accept': 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: qs.stringify(credentials)\n  }).then(response => {\n    if (!response.ok) throw new Error(response.status);else return response.json();\n  }).then(data => data.json());\n}","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/actions/login.js"],"names":["LOGIN_SUCCESS","receiveLogin","type","loginUser","credentials","qs","require","fetch","method","headers","body","stringify","then","response","ok","Error","status","json","data"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,eAAtB;AAEP,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH;AAED,OAAO,eAAeG,SAAf,CAAyBC,WAAzB,EAAsC;AACzC,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,SAAOC,KAAK,CAAC,6BAAD,EAAgC;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAF+B;AAMxCC,IAAAA,IAAI,EAAEL,EAAE,CAACM,SAAH,CAAaP,WAAb;AANkC,GAAhC,CAAL,CAQNQ,IARM,CAQDC,QAAQ,IAAI;AACd,QAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB,MAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,MAAnB,CAAN,CAAjB,KACK,OAAOH,QAAQ,CAACI,IAAT,EAAP;AACR,GAXM,EAYNL,IAZM,CAYDM,IAAI,IAAIA,IAAI,CAACD,IAAL,EAZP,CAAP;AAaH","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n\r\nexport function receiveLogin() {\r\n    return {\r\n        type: LOGIN_SUCCESS\r\n    };\r\n}\r\n\r\nexport async function loginUser(credentials) {\r\n    const qs = require('qs');\r\n    \r\n    return fetch('http://localhost:8000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: qs.stringify(credentials)\r\n    })\r\n    .then(response => {\r\n        if(!response.ok) throw new Error(response.status);\r\n        else return response.json();\r\n    })\r\n    .then(data => data.json())\r\n}"]},"metadata":{},"sourceType":"module"}