{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Product.js\";\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = sessionStorage.getItem('user');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const category_id = this.props.match.params.category_id;\n    console.log('Do something with it', category_id);\n    fetch(`http://localhost:8000/products?category_id=${category_id}`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      }\n    }).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        products: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.products.map(products => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"categories_align card-hover\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          src: products.image,\n          className: \"img-fluid\",\n          alt: \"Card image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: products.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: products.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Product.js"],"names":["Component","withRouter","Card","token","sessionStorage","getItem","Product","constructor","props","state","products","componentDidMount","category_id","match","params","console","log","fetch","method","headers","Authorization","replace","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","catch","errorMessage","toString","render","map","width","image","name","description"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAd;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC5BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBF,WAA5C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,WAApC;AACAK,IAAAA,KAAK,CAAE,8CAA6CL,WAAY,EAA3D,EAA8D;AAC/DM,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGLC,QAAAA,aAAa,EAAE,YAAYjB,KAAK,CAACkB,OAAN,CAAc,UAAd,EAA0B,IAA1B;AAHtB;AAFsD,KAA9D,CAAL,CAQCC,IARD,CAQM,MAAMC,QAAN,IAAkB;AACpB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACM,UAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAKK,QAAL,CAAc;AAAEtB,QAAAA,QAAQ,EAAEc;AAAZ,OAAd;AACH,KAhBD,EAiBCS,KAjBD,CAiBON,KAAK,IAAI;AACZ,WAAKK,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAEP,KAAK,CAACQ,QAAN;AAAhB,OAAd;AACApB,MAAAA,OAAO,CAACY,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KApBD;AAqBH;;AACDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACK,KAAK3B,KAAL,CAAWC,QAAX,CAAoB2B,GAApB,CAAwB3B,QAAQ,iBAC7B,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAA8C,QAAA,KAAK,EAAE;AAAE4B,UAAAA,KAAK,EAAE;AAAT,SAArD;AAAA,gCACA,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,GAAG,EAAE5B,QAAQ,CAAC6B,KAAxB;AAA+B,UAAA,SAAS,EAAC,WAAzC;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAa7B,QAAQ,CAAC8B;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACK9B,QAAQ,CAAC+B;AADd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AApD2B;;AAsDhC,oBAAexC,UAAU,CAACK,OAAD,CAAzB","sourcesContent":["import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst token = sessionStorage.getItem('user')\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const category_id = this.props.match.params.category_id;\r\n        console.log('Do something with it', category_id);\r\n        fetch(`http://localhost:8000/products?category_id=${category_id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n        })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({ products: data })\r\n        })\r\n        .catch(error => {\r\n            this.setState({ errorMessage: error.toString() });\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.products.map(products =>\r\n                    <Card className=\"categories_align card-hover\" style={{ width: '18rem' }}>\r\n                    <Card.Img src={products.image} className=\"img-fluid\" alt=\"Card image\"/>\r\n                    <Card.Body>\r\n                        <Card.Title>{products.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {products.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    {/* <Card.Body>\r\n                        <Link to={`/product/${categories.id}`}><Button variant=\"primary\">See More>></Button></Link>\r\n                    </Card.Body> */}\r\n                </Card>    \r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Product);"]},"metadata":{},"sourceType":"module"}