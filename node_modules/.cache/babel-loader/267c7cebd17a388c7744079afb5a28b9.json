{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Product.js\";\nimport { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = sessionStorage.getItem('user');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const category_id = this.props.match.params.category_id;\n    fetch(`http://localhost:8000/products?category_id=${category_id}`, {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      }\n    }).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        products: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  addToCart() {\n    console.log(\"hello this is add to cart\");\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.products.map(products => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"categories_align card-hover\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: products.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: products.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          className: \"img-fluid\",\n          variant: \"top\",\n          src: `http://localhost:8000${products.image.substring(1)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Price : \", products.price, \" INR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          disabled: Product.addToCart,\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Product.js"],"names":["Component","withRouter","Card","Button","token","sessionStorage","getItem","Product","constructor","props","state","products","componentDidMount","category_id","match","params","fetch","method","headers","Authorization","replace","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","catch","errorMessage","toString","console","addToCart","log","render","map","width","name","description","image","substring","price"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nconst token = sessionStorage.getItem('user')\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const category_id = this.props.match.params.category_id;\r\n\r\n        fetch(`http://localhost:8000/products?category_id=${category_id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n        })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            this.setState({ products: data })\r\n        })\r\n        .catch(error => {\r\n            this.setState({ errorMessage: error.toString() });\r\n            console.error('There was an error!', error);\r\n        });\r\n    }\r\n    \r\n    addToCart() {\r\n        console.log(\"hello this is add to cart\")\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.products.map(products =>\r\n                    <Card className=\"categories_align card-hover\" style={{ width: '18rem' }}>\r\n                        <Card.Title>{products.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {products.description}\r\n                        </Card.Text>\r\n                        <Card.Img className=\"img-fluid\" variant=\"top\" src={`http://localhost:8000${products.image.substring(1)}`} />\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Price : {products.price} INR\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Button variant=\"primary\" disabled={Product.addToCart}>Add to cart</Button>\r\n                    </Card>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Product);"]},"metadata":{},"sourceType":"module"}