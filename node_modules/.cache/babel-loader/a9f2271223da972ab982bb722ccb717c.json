{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container } from 'react-bootstrap';\nimport './Login.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  const qs = require('qs');\n\n  return fetch('http://localhost:8000/login', {\n    method: 'POST',\n    headers: {\n      'accept': 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: qs.stringify(credentials)\n  }).then(async response => {\n    const data = await response.json();\n\n    if (!response.ok) {\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n  }).catch(error => {\n    this.setState({\n      errorMessage: error.toString()\n    });\n    console.error('There was an error!', error);\n  });\n}\n\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [username, setusername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" username \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"text\",\n            value: username,\n            onChange: e => setusername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            type: \"submit\",\n            disabled: !validateForm(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"EHNL7evl3grjGuEPzcklTeRp7QA=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Login.js"],"names":["React","useState","Form","Button","Container","PropTypes","loginUser","credentials","qs","require","fetch","method","headers","body","stringify","then","response","data","json","ok","error","message","statusText","Promise","reject","catch","setState","errorMessage","toString","console","Login","setToken","username","setusername","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","token","e","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { Container } from 'react-bootstrap';\r\nimport './Login.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nasync function loginUser(credentials) {\r\n    const qs = require('qs');\r\n    return fetch('http://localhost:8000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: qs.stringify(credentials)\r\n    })\r\n    .then(async response => {\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        this.setState({ errorMessage: error.toString() });\r\n        console.error('There was an error!', error);\r\n    });\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n    const [username, setusername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function validateForm() {\r\n        return username.length > 0 && password.length > 0\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const token = await loginUser({\r\n            username,\r\n            password\r\n          });\r\n        setToken(token);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Login\">\r\n            <Container fluid=\"md\">\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group size=\"lg\" controlId=\"username\">\r\n                        <Form.Label> username </Form.Label>\r\n                        <Form.Control\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(e) => setusername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group size=\"lg\" controlId=\"password\">\r\n                        <Form.Label> Password </Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"lg\">\r\n                        <Button block type=\"submit\" disabled={!validateForm()}>\r\n                            Login\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}