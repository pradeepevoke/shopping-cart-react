{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nfunction setUserDetails(token, setIsAdmin) {\n  fetch(`http://localhost:8000/currentuser`, {\n    method: 'GET',\n    headers: {\n      'accept': 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n    }\n  }).then(async response => {\n    const data = await response.json();\n    localStorage.setItem('user_details', JSON.stringify(data));\n\n    if (data.user_role.name === \"admin\") {\n      localStorage.setItem('isAdmin', true);\n      setIsAdmin(true);\n    }\n  }).catch(error => {\n    this.setState({\n      errorMessage: error.toString()\n    });\n    console.error('There was an error!', error);\n  });\n}\n\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  const [token, setToken] = useState(getToken());\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n    setUserDetails(userToken, setIsAdmin);\n  };\n\n  return {\n    setToken: saveToken,\n    token,\n    isAdmin\n  };\n}\n\n_s(useToken, \"9ojkTLCMq65oY8p8xkvst10qpRE=\");","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/useToken.js"],"names":["useState","setUserDetails","token","setIsAdmin","fetch","method","headers","Authorization","replace","then","response","data","json","localStorage","setItem","JSON","stringify","user_role","name","catch","error","setState","errorMessage","toString","console","useToken","getToken","getItem","setToken","isAdmin","saveToken","userToken"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA0C;AACxCC,EAAAA,KAAK,CAAE,mCAAF,EAAsC;AACnCC,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAE,YAAYL,KAAK,CAACM,OAAN,CAAc,UAAd,EAA0B,IAA1B;AAHtB;AAF0B,GAAtC,CAAL,CAQKC,IARL,CAQU,MAAMC,QAAN,IAAkB;AACpB,UAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArC;;AACA,QAAGA,IAAI,CAACM,SAAL,CAAeC,IAAf,KAAwB,OAA3B,EAAmC;AACjCL,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgC,IAAhC;AACAX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACJ,GAfL,EAgBKgB,KAhBL,CAgBWC,KAAK,IAAI;AACZ,SAAKC,QAAL,CAAc;AAAEC,MAAAA,YAAY,EAAEF,KAAK,CAACG,QAAN;AAAhB,KAAd;AACAC,IAAAA,OAAO,CAACJ,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,GAnBL;AAoBD;;AAED,eAAe,SAASK,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,WAAOb,YAAY,CAACc,OAAb,CAAqB,OAArB,CAAP;AACD,GAFD;;AAIA,QAAM,CAACzB,KAAD,EAAQ0B,QAAR,IAAoB5B,QAAQ,CAAC0B,QAAQ,EAAT,CAAlC;AACA,QAAM,CAACG,OAAD,EAAU1B,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAM8B,SAAS,GAAGC,SAAS,IAAI;AAC7BlB,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BiB,SAA9B;AACAH,IAAAA,QAAQ,CAACG,SAAD,CAAR;AACA9B,IAAAA,cAAc,CAAC8B,SAAD,EAAY5B,UAAZ,CAAd;AACD,GAJD;;AAMA,SAAO;AACLyB,IAAAA,QAAQ,EAAEE,SADL;AAEL5B,IAAAA,KAFK;AAGL2B,IAAAA;AAHK,GAAP;AAKD;;GAlBuBJ,Q","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction setUserDetails(token, setIsAdmin){\r\n  fetch(`http://localhost:8000/currentuser`, {\r\n          method: 'GET',\r\n          headers: {\r\n              'accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n          },\r\n      })\r\n      .then(async response => {\r\n          const data = await response.json();\r\n          localStorage.setItem('user_details', JSON.stringify(data));\r\n          if(data.user_role.name === \"admin\"){\r\n            localStorage.setItem('isAdmin', true);\r\n            setIsAdmin(true)\r\n          }\r\n      })\r\n      .catch(error => {\r\n          this.setState({ errorMessage: error.toString() });\r\n          console.error('There was an error!', error);\r\n      });\r\n}\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', userToken);\r\n    setToken(userToken);\r\n    setUserDetails(userToken, setIsAdmin)\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n    isAdmin\r\n  }\r\n}\r\n "]},"metadata":{},"sourceType":"module"}