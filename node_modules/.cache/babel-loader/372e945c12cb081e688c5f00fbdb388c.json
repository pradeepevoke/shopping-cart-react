{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useCategory = token => {\n  _s();\n\n  const [categories, setCategories] = useState();\n  const [error, setError] = useState();\n  fetch('http://localhost:8000/categories', {\n    method: 'GET',\n    headers: {\n      'accept': 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n    }\n  }).then(async response => {\n    const data = await response.json();\n\n    if (!response.ok) {\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    setCategories(data);\n  }).catch(error => {\n    setError({\n      errorMessage: error.toString()\n    });\n    console.error('There was an error!', error);\n  });\n  return {\n    categories,\n    error\n  };\n};\n\n_s(useCategory, \"ICdmiF5gzo45tujzgR7mDSZM2Cg=\");\n\nexport default useCategory;","map":{"version":3,"sources":["D:/shopping-cart-react/src/actions/getCategory.js"],"names":["useState","useCategory","token","categories","setCategories","error","setError","fetch","method","headers","Authorization","replace","then","response","data","json","ok","message","statusText","Promise","reject","catch","errorMessage","toString","console"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,EAA5C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACAO,EAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,IAAAA,MAAM,EAAE,KAD8B;AAEtCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAE,YAAYR,KAAK,CAACS,OAAN,CAAc,UAAd,EAA0B,IAA1B;AAHtB;AAF6B,GAArC,CAAL,CAQKC,IARL,CAQU,MAAMC,QAAN,IAAkB;AACpB,UAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;;AAEA,QAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd,YAAMX,KAAK,GAAIS,IAAI,IAAIA,IAAI,CAACG,OAAd,IAA0BJ,QAAQ,CAACK,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAef,KAAf,CAAP;AACH;;AACDD,IAAAA,aAAa,CAACU,IAAD,CAAb;AACH,GAhBL,EAiBKO,KAjBL,CAiBWhB,KAAK,IAAI;AACZC,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,YAAY,EAAEjB,KAAK,CAACkB,QAAN;AAAhB,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACnB,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,GApBL;AAsBA,SAAO;AACHF,IAAAA,UADG;AAEHE,IAAAA;AAFG,GAAP;AAIH,CA7BD;;GAAMJ,W;;AA+BN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useCategory = (token) => {\r\n    const [categories, setCategories] = useState();\r\n    const [error, setError] = useState()\r\n    fetch('http://localhost:8000/categories', {\r\n        method: 'GET',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n        },\r\n    })\r\n        .then(async response => {\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            setCategories(data)\r\n        })\r\n        .catch(error => {\r\n            setError({ errorMessage: error.toString() });\r\n            console.error('There was an error!', error);\r\n        });\r\n    \r\n    return {\r\n        categories,\r\n        error\r\n    }\r\n}\r\n\r\nexport default useCategory"]},"metadata":{},"sourceType":"module"}