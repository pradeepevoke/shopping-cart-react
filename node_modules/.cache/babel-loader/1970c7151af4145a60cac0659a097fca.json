{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    if (token) return true;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      access_token: \"\",\n      authenticated: true\n    };\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  setUsername(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  setPassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    await this.loginUser({\n      username: this.state.username,\n      password: this.state.password\n    });\n\n    if (this.state.authenticated) {\n      console.log(this.state.access_token);\n      this.props.setToken(this.state.access_token);\n    }\n  }\n\n  async loginUser(credentials) {\n    const qs = require('qs');\n\n    return fetch('http://localhost:8000/login', {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: qs.stringify(credentials)\n    }).then(response => {\n      if (!response.ok) {\n        this.setState({\n          authenticated: false\n        });\n      } else {\n        const data = response.json();\n        localStorage.setItem('authenticated', true);\n        this.setState({\n          access_token: data.access_token\n        });\n        this.setState({\n          authenticated: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [!this.state.authenticated && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: \"Invalid Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" username \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"email\",\n              value: this.state.username,\n              onChange: this.setUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: this.state.password,\n              onChange: this.setPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            type: \"submit\",\n            disabled: !(this.state.username && this.state.password),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/Login.js"],"names":["React","Component","Form","Button","Container","PropTypes","Login","isAuthenticated","token","localStorage","getItem","constructor","props","state","username","password","access_token","authenticated","setUsername","bind","setPassword","handleSubmit","event","setState","target","value","preventDefault","loginUser","console","log","setToken","credentials","qs","require","fetch","method","headers","body","stringify","then","response","ok","data","json","setItem","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { Container } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types'\r\nimport './Login.css';\r\n\r\n\r\nexport default class Login extends Component{\r\n\r\n    static propTypes = {\r\n        setToken: PropTypes.func.isRequired,\r\n    };\r\n    \r\n    static isAuthenticated() {\r\n        const token = localStorage.getItem('token')\r\n        if (token) return true;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username : \"\",\r\n            password : \"\",\r\n            access_token:\"\",\r\n            authenticated: true\r\n        }\r\n\r\n        this.setUsername = this.setUsername.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    setUsername(event) {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    setPassword(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await this.loginUser({ username: this.state.username, password: this.state.password });\r\n        \r\n        if (this.state.authenticated) {\r\n            console.log(this.state.access_token)\r\n            this.props.setToken(this.state.access_token)\r\n        }\r\n    }\r\n    async loginUser(credentials){\r\n        const qs = require('qs');\r\n        return fetch('http://localhost:8000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: qs.stringify(credentials)\r\n        })\r\n        .then(response => {\r\n            if(!response.ok){\r\n                this.setState({ authenticated : false });\r\n            }\r\n            else{\r\n                const data = response.json()\r\n                localStorage.setItem('authenticated', true)\r\n                this.setState({ access_token : data.access_token });\r\n                this.setState({ authenticated : true });\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Login\">\r\n                <Container fluid=\"md\">\r\n    \r\n                    <Form onSubmit={this.handleSubmit}>\r\n                    {!this.state.authenticated && <p className=\"error-msg\">Invalid Credentials</p>}\r\n                        <Form.Group size=\"lg\" controlId=\"username\">\r\n                            <Form.Label> username </Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type=\"email\"\r\n                                value={this.state.username}\r\n                                onChange={this.setUsername}\r\n                            />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group size=\"lg\" controlId=\"password\">\r\n                            <Form.Label> Password </Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.setPassword}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button block type=\"submit\" disabled={!(this.state.username && this.state.password  )}>\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}