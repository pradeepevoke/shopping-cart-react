{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopping-cart-react\\\\src\\\\components\\\\admin\\\\AddProduct.js\";\nimport React, { Component } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Alert, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      category_id: \"\",\n      product_name: \"\",\n      description: \"\",\n      price: \"\",\n      image: \"\",\n      variant: \"\",\n      message: \"\"\n    };\n    this.setCategoryID = this.setCategoryID.bind(this);\n    this.setProductName = this.setProductName.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.setPrice = this.setPrice.bind(this);\n    this.setImage = this.setImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setAdded = this.setAdded.bind(this);\n  }\n\n  componentDidMount() {\n    const token = this.props.token;\n    fetch(\"http://localhost:8000/categories\", {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      }\n    }).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        categories: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  setProductName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  setDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  setCategoryID(event) {\n    this.setState({\n      category_id: event.target.value\n    });\n  }\n\n  setImage(event) {\n    this.setState({\n      image: event.target.value\n    });\n  }\n\n  setPrice(event) {\n    this.setState({\n      price: event.target.value\n    });\n  }\n\n  setAdded(value) {\n    this.setState({\n      added: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.addCategory({\n      name: this.state.product_name,\n      description: this.state.description\n    });\n  }\n\n  async addCategory(details) {\n    const token = this.props.token;\n    return fetch('http://localhost:8000/category/add', {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\n      },\n      body: JSON.stringify(details)\n    }).then(response => {\n      if (!response.ok) {\n        this.setState({\n          added: true\n        });\n        this.setState({\n          variant: \"danger\"\n        });\n        return response.json();\n      } else {\n        this.setState({\n          added: true\n        });\n        this.setState({\n          variant: \"success\"\n        });\n        this.setState({\n          category_name: \"\"\n        });\n        this.setState({\n          description: \"\"\n        });\n        return response.json();\n      }\n    }).then(data => {\n      this.setState({\n        message: data.detail\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"product_name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Product Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"text\",\n              value: this.state.product_name,\n              onChange: this.setProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"category_description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Description \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: this.state.description,\n              onChange: this.setDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            as: \"select\",\n            onChange: this.setCategoryID,\n            name: \"selectedFromBucket\",\n            children: this.state.categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFileSm\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            type: \"submit\",\n            disabled: !(this.state.product_name && this.state.description),\n            children: \"Save Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          show: this.state.added,\n          variant: this.state.variant,\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.setAdded(false),\n              variant: \"outline-success\",\n              children: \"Close!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddProduct;","map":{"version":3,"sources":["D:/shopping-cart-react/src/components/admin/AddProduct.js"],"names":["React","Component","Form","Button","Alert","Container","AddProduct","constructor","props","state","categories","category_id","product_name","description","price","image","variant","message","setCategoryID","bind","setProductName","setDescription","setPrice","setImage","handleSubmit","setAdded","componentDidMount","token","fetch","method","headers","Authorization","replace","then","response","data","json","ok","error","statusText","Promise","reject","setState","catch","errorMessage","toString","console","event","name","target","value","added","preventDefault","addCategory","details","body","JSON","stringify","category_name","detail","render","map","category","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { Alert, Container } from 'react-bootstrap';\r\n\r\nclass AddProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            categories: [],\r\n            category_id: \"\",\r\n            product_name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            image: \"\",\r\n            variant: \"\",\r\n            message: \"\"\r\n        }\r\n\r\n        this.setCategoryID = this.setCategoryID.bind(this);\r\n        this.setProductName = this.setProductName.bind(this);\r\n        this.setDescription = this.setDescription.bind(this);\r\n        this.setPrice = this.setPrice.bind(this);\r\n        this.setImage = this.setImage.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setAdded = this.setAdded.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const token = this.props.token\r\n\r\n        fetch(\"http://localhost:8000/categories\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n        })\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    const error = (data && data.message) || response.statusText;\r\n                    return Promise.reject(error);\r\n                }\r\n                this.setState({ categories: data })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error.toString() });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    setProductName(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    setDescription(event) {\r\n        this.setState({ description: event.target.value });\r\n    }\r\n\r\n    setCategoryID(event) {\r\n        this.setState({ category_id: event.target.value });\r\n    }\r\n\r\n    setImage(event) {\r\n        this.setState({ image: event.target.value });\r\n    }\r\n\r\n    setPrice(event) {\r\n        this.setState({ price: event.target.value });\r\n    }\r\n\r\n    setAdded(value) {\r\n        this.setState({ added: value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.addCategory({ name: this.state.product_name, description: this.state.description });\r\n    }\r\n\r\n    async addCategory(details) {\r\n        const token = this.props.token\r\n\r\n        return fetch('http://localhost:8000/category/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + token.replace(/^\"(.*)\"$/, '$1')\r\n            },\r\n            body: JSON.stringify(details)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.setState({ added: true });\r\n                    this.setState({ variant: \"danger\" })\r\n                    return response.json();\r\n                }\r\n                else {\r\n                    this.setState({ added: true });\r\n                    this.setState({ variant: \"success\" })\r\n                    this.setState({ category_name: \"\" })\r\n                    this.setState({ description: \"\" })\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(data => {\r\n                this.setState({ message: data.detail })\r\n\r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error.toString() });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <Container fluid=\"md\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group size=\"lg\" controlId=\"product_name\">\r\n                            <Form.Label> Product Name </Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                value={this.state.product_name}\r\n                                onChange={this.setProductName}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group size=\"lg\" controlId=\"category_description\">\r\n                            <Form.Label> Description </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={this.state.description}\r\n                                onChange={this.setDescription}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Label> Category </Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            as=\"select\"\r\n                            onChange={this.setCategoryID}\r\n                            name=\"selectedFromBucket\"\r\n                        >\r\n                            {this.state.categories.map((category) => (\r\n                                <option key={category.id} value={category.id}>\r\n                                    {category.name}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n\r\n                        <Form.Label>Choose Image</Form.Label>\r\n                        <Form.Group controlId=\"formFileSm\" className=\"mb-3\">\r\n                            <Form.Control type=\"file\" size=\"sm\" />\r\n                        </Form.Group>\r\n\r\n                        <Button block type=\"submit\" disabled={!(this.state.product_name && this.state.description)}>\r\n                            Save Details\r\n                        </Button>\r\n                    </Form>\r\n\r\n                    <Alert show={this.state.added} variant={this.state.variant}>\r\n                        <Alert.Heading>{this.state.message}</Alert.Heading>\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <Button onClick={() => this.setAdded(false)} variant=\"outline-success\">\r\n                                Close!\r\n                            </Button>\r\n                        </div>\r\n                    </Alert>\r\n\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}